<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tecs on abin の 成长之路</title>
    <link>https://kevinbin123.github.io/tecs/</link>
    <description>Recent content in Tecs on abin の 成长之路</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 06 Nov 2021 00:50:39 +0800</lastBuildDate><atom:link href="https://kevinbin123.github.io/tecs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Windows上安装hexo并且推送到github过程记录</title>
      <link>https://kevinbin123.github.io/tecs/windows%E4%B8%8A%E5%AE%89%E8%A3%85hexo%E5%B9%B6%E4%B8%94%E6%8E%A8%E9%80%81%E5%88%B0github%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Sat, 06 Nov 2021 00:50:39 +0800</pubDate>
      
      <guid>https://kevinbin123.github.io/tecs/windows%E4%B8%8A%E5%AE%89%E8%A3%85hexo%E5%B9%B6%E4%B8%94%E6%8E%A8%E9%80%81%E5%88%B0github%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/</guid>
      <description>安装准备 安装git 、nodejs、npm 、cnpm
1、安装nodejs和npm,访问官网直接安装即可
node.js网址： https://nodejs.org/en/
2、安装git,访问官网直接安装即可
Git网址：https://gitforwindows.org/（这个也是Windows版的）
3、安装cnpm（安装的是淘宝的源）
npm install cnpm -g --registry=https://registry.npm.taobao.org 4、输入npm -v和node -v以及cnpm -v检查当前版本 默认是会注册到环境变量，如果没有，则自己添加一下
安装hexo 1、安装一个Hexo博客框架，在命令行输入
cnpm install -g hexo-cli 2、完成后输入hexo -v进行验证
3、创建一个博客的文件夹
D:\myblog\hexotest（手动建或者用命令mkdir都可以）
4、输入hexo init的命令去初始化，这样执行完毕后，一个hexo博客框架的基础就会全部安装在文件夹里了，注意你的cmd一定要是管理员模式
hexo init 5、启动，输入hexo s命令，然后访问查看效果
使用hexo 1、清理
hexo clean 2、新建博客
hexo n &amp;quot;文章名&amp;quot; 编辑文章要用markdown工具去编写具体的内容（D:\myblog\hexotest\source_posts） 3、生成文章
hexo g 4、开启博客发布文章
hexo s 推送github 安装hexo-deplyer-git cnpm install hexo-deployer-git --save 配置git 使用ssh方式推送到github
1、在github上新建自己的仓库
2、配置ssh
2.1 查看Git环境所有配置
git config &amp;ndash;list
2.2 如果没有配置user.name和user.email则需要先配置
git config &amp;ndash;global user.</description>
    </item>
    
    <item>
      <title>Windows上安装hugo并且推送到github过程记录</title>
      <link>https://kevinbin123.github.io/tecs/windows%E4%B8%8A%E5%AE%89%E8%A3%85hugo%E5%B9%B6%E4%B8%94%E6%8E%A8%E9%80%81%E5%88%B0github%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Sat, 06 Nov 2021 00:49:06 +0800</pubDate>
      
      <guid>https://kevinbin123.github.io/tecs/windows%E4%B8%8A%E5%AE%89%E8%A3%85hugo%E5%B9%B6%E4%B8%94%E6%8E%A8%E9%80%81%E5%88%B0github%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/</guid>
      <description>安装hugo （从0.48版本开始就需要自己配置环境变量）
访问官网；选择tag里面下载最新的包，比如hugo_0.89.0_windows-64bit.zip
解压出来后，放到一个文件夹中，并设置成环境变量
使用hugo version测试是否安装成功
使用hugo 创建一个新blog
hugo new site hugoblog 进入博客目录
cd D:\myblog\hugotest\hugoblog 创建一篇新博文
hugo new about.md hugo new post/first.md 编辑博文一样使用markdown工具自己编辑 更换主题
cd themes git clone https://github.com/spf13/hyde.git 或者不仅如此themes目录的话 直接 git clone https://github.com/vaga/hugo-theme-m10c.git themes/m10c 直接指定主题启动，不在配置文件配置
hugo server --theme=hyde --buildDrafts 在配置文件中修改后,然后启动
修改config.toml 增加 theme = &amp;quot;m10c&amp;quot; 启动： hugo server --buildDrafts 访问的话 http://localhost:1313/
配置github推送 hugo --baseUrl=&amp;quot;https://kevinbin123.github.io/&amp;quot; --buildDrafts 进入public目录，用git base here工具
git init git add . git commit -m &amp;quot;hugo blog&amp;quot; git remote add origin git@github.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://kevinbin123.github.io/tecs/centos%E4%B8%8A%E7%94%A8docker%E9%83%A8%E7%BD%B2nginx%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kevinbin123.github.io/tecs/centos%E4%B8%8A%E7%94%A8docker%E9%83%A8%E7%BD%B2nginx%E8%AE%B0%E5%BD%95/</guid>
      <description>title: &amp;ldquo;Centos上用docker部署nginx记录&amp;rdquo; date: 2021-11-06T18:15:59+08:00 draft: true
1、先部署docker，参考博客：
 博客：https://blog.csdn.net/Ming13416908424/article/details/107753792
 2、docker配置一下阿里镜像，加快一下速度
3、拉取nginx镜像
docker pull nginx:latest 4、运行容器
docker run -p 80:80 --name nginx -d nginx 5、复制容器内的配置文件到宿主主机
docker exec nginx ls /etc/nginx ##以下内容不是要输入的，是显示出来的 conf.d fastcgi_params koi-utf koi-win mime.types modules nginx.conf scgi_params uwsgi_params win-utf 6、复制容器内的配置文件到宿主机，或者仅复制conf.d文件夹内的配置文件，运行时挂载相应文件即可
docker cp -a nginx:/etc/nginx/ /srv/nginx/conf 7、停止Nginx容器并删除
docker stop nginx docker rm nginx 8、重新运行容器，并挂载我们在第三步复制出来的配置文件目录（注意这一步之前没有加rw等，踩了很多坑；conf下的default.conf里面root路径也不能修改，会出现404）
docker run --privileged=true --restart always --name nginx -p 80:80 \ -v /srv/nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro \ -v /srv/nginx/conf/conf.d:/etc/nginx/conf.d:ro \ -v /srv/nginx/html:/usr/share/nginx/html:rw \ -v/srv/nginx/logs:/var/log/nginx -d nginx 9、到此Nginx已安装完成，如有需要就直接修改/srv/nginx/conf/conf.</description>
    </item>
    
  </channel>
</rss>
